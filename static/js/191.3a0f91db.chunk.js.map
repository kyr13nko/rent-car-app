{"version":3,"file":"static/js/191.3a0f91db.chunk.js","mappings":"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","sources":["redux/filterSelectors.js","components/LoadMoreBtn/LoadMoreBtn.styled.js","components/LoadMoreBtn/LoadMoreBtn.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/colorStyles.js","components/SearchForm/SearchForm.jsx","pages/Catalog.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { selectCars } from './carsSelectors';\n\nexport const selectBrand = state => state.filter.filterBrand;\nexport const selectIsFiltered = state => state.filter.isFiltered;\n\nexport const selectFilteredCars = createSelector([selectCars, selectBrand], (cars, filterBrand) => {\n  const filteredCars = cars.filter(car => {\n    if (filterBrand && car.make.toLowerCase() !== filterBrand.toLowerCase()) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return filteredCars;\n});\n","import styled from 'styled-components';\n\nexport const StyledBtn = styled.button`\n  font-weight: 500;\n  line-height: 24px;\n  text-decoration-line: underline;\n  color: #3470ff;\n  background-color: #ffffff;\n  transition: color 0.3s ease;\n  margin-top: 50px;\n\n  &:hover,\n  &:focus {\n    color: #0b44cd;\n  }\n`;\n","import { StyledBtn } from './LoadMoreBtn.styled';\n\nconst LoadMoreBtn = ({ handleNewPage }) => {\n  return (\n    <StyledBtn type=\"button\" onClick={handleNewPage}>\n      Load more\n    </StyledBtn>\n  );\n};\n\nexport default LoadMoreBtn;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    align-items: flex-end;\n    gap: 18px;\n  }\n`;\n\nexport const BrandWrapper = styled.div`\n  display: flex;\n  gap: 18px;\n`;\n\nexport const MileageWrapper = styled.div`\n  display: flex;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #8a8a89;\n`;\n\nexport const InputMileageText = styled.p`\n  position: absolute;\n  top: 40px;\n  left: 22px;\n  color: #121417;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n`;\n\nconst inputStyles = `\n  width: 160px;\n  padding: 13px 0 13px 88px;\n  font-size: 18px;\n  border: 1px solid transparent;\n  background-color: #f7f7fb;\n  color: #121417;\n  font-weight: 500;\n  line-height: 20px;\n  margin-top: 8px;\n\n  &::placeholder {\n    opacity: 1;\n  }\n\n  &:hover {\n    border-color: rgba(138, 138, 137, 0.5);\n  }\n  &:focus {\n    outline: none;\n    border-color: #0b44cd;\n  }\n`;\n\nexport const InputLeft = styled.input`\n  ${inputStyles}\n  border-radius: 14px 0px 0px 14px;\n  border-right: 1px solid rgba(138, 138, 137, 0.2);\n  margin-left: 0px;\n`;\n\nexport const InputRight = styled.input`\n  ${inputStyles}\n  border-radius: 0px 14px 14px 0px;\n  border-left: 1px solid rgba(138, 138, 137, 0.2);\n  margin-right: 0px;\n`;\n\nexport const Button = styled.button`\n  /* display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0; */\n  width: 136px;\n  height: 48px;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 20px;\n  color: #ffffff;\n  background-color: #3470ff;\n  border-radius: 12px;\n  padding: 14px 44px;\n  transition: background-color 0.3s ease;\n\n  &:hover,\n  &.active {\n    background-color: #0b44cd;\n  }\n`;\n","export const colorStyles = width => {\n  return {\n    control: provided => {\n      return {\n        ...provided,\n        backgroundColor: '#f7f7fb',\n        border: '1px solid transparent',\n        borderRadius: '14px',\n        color: '#121417',\n        fontSize: '18px',\n        fontWeight: '500',\n        lineHeight: '20px',\n        padding: '5px 0',\n        width,\n        cursor: 'pointer',\n        marginTop: '8px',\n      };\n    },\n    option: (provided, { isDisabled, isSelected }) => {\n      return {\n        ...provided,\n        backgroundColor: isSelected ? 'rgba(18, 20, 23, 0.2)' : '#ffffff',\n        color: isDisabled ? '#ffffff' : isSelected ? '#121417' : 'rgba(18, 20, 23, 0.2)',\n        fontSize: isDisabled ? '16px' : '18px',\n        borderRadius: '14px',\n        transition: 'color 0.3s ease',\n        '&:hover': {\n          color: 'rgba(18, 20, 23, 0.2)',\n        },\n      };\n    },\n    singleValue: provided => {\n      return {\n        ...provided,\n        color: '#121417',\n        fontSize: '18px',\n      };\n    },\n    placeholder: provided => ({\n      ...provided,\n      color: '#121417',\n      fontSize: '18px',\n    }),\n    menu: provided => ({\n      ...provided,\n      borderRadius: '14px',\n      border: '1px solid rgba(0, 0, 0, 0.2)',\n      background: '#ffffff',\n      boxShadow: '0px 4px 36px 0px rgba(0, 0, 0, 0.02)',\n      overflow: 'hidden',\n      padding: '14px 8px 14px 18px',\n    }),\n    dropdownIndicator: (provided, state) => ({\n      ...provided,\n      color: '#000000',\n      cursor: 'pointer',\n      transform: state.isFocused ? 'rotate(180deg)' : null,\n    }),\n    indicatorSeparator: provided => ({\n      ...provided,\n      backgroundColor: 'transparent',\n    }),\n    menuList: provided => ({\n      ...provided,\n      '::-webkit-scrollbar': {\n        width: '8px',\n        height: '130px',\n      },\n      '::-webkit-scrollbar-thumb': {\n        background: '#0b44cd',\n        borderRadius: '10px',\n      },\n    }),\n  };\n};\n","import { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Select from 'react-select';\n\nimport { updateFilter } from '../../redux/filterSlice';\nimport { fetchCars } from '../../redux/carsOperations';\n\nimport makes from '../../data/makes.json';\n\nimport {\n  BrandWrapper,\n  Button,\n  Form,\n  InputLeft,\n  InputMileageText,\n  InputRight,\n  Label,\n  MileageWrapper,\n} from './SearchForm.styled';\nimport { colorStyles } from './colorStyles';\n\nconst getBrands = carBrandOptions => {\n  return carBrandOptions.map(brand => ({ value: brand, label: brand }));\n};\nconst brands = getBrands(makes);\n\nconst SearchForm = () => {\n  const dispatch = useDispatch();\n\n  const brandRef = useRef(null);\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const form = e.target;\n    const brand = form.elements.brand.value.trim();\n\n    dispatch(\n      updateFilter({\n        brand,\n      })\n    );\n    dispatch(fetchCars());\n    form.reset();\n\n    brandRef.current.clearValue();\n  };\n\n  return (\n    <Form onSubmit={handleSubmitForm}>\n      <BrandWrapper>\n        <Label>\n          Car Brand\n          <Select\n            name=\"brand\"\n            options={brands}\n            ref={ref => (brandRef.current = ref)}\n            styles={colorStyles(224)}\n            placeholder=\"Enter the text\"\n          />\n        </Label>\n\n        <Label>\n          Price/1 hour\n          <Select name=\"price\" styles={colorStyles(125)} placeholder=\"To $\" />\n        </Label>\n      </BrandWrapper>\n\n      <MileageWrapper>\n        <Label>\n          Car mileage / km\n          <InputMileageText>From</InputMileageText>\n          <InputLeft type=\"text\" name=\"mileageFrom\" autoComplete=\"off\" />\n        </Label>\n\n        <Label style={{ color: '#ffffff' }}>\n          Car mileage / km\n          <InputMileageText>To</InputMileageText>\n          <InputRight type=\"text\" name=\"mileageTo\" autoComplete=\"off\" />\n        </Label>\n      </MileageWrapper>\n\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { resetFilter } from '../redux/filterSlice';\nimport { fetchCars } from '../redux/carsOperations';\nimport { selectCars, selectIsLoading } from '../redux/carsSelectors';\nimport { selectFilteredCars, selectIsFiltered } from '../redux/filterSelectors';\n\nimport CarList from 'components/CarList/CarList';\nimport LoadMoreBtn from 'components/LoadMoreBtn/LoadMoreBtn';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport EmptyResult from 'components/EmptyResult/EmptyResult';\n\nconst Catalog = () => {\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(1);\n  const cars = useSelector(selectCars);\n  const isLoading = useSelector(selectIsLoading);\n  const isFiltered = useSelector(selectIsFiltered);\n  const filteredCars = useSelector(selectFilteredCars);\n\n  useEffect(() => {\n    dispatch(fetchCars(currentPage));\n    dispatch(resetFilter());\n  }, [currentPage, dispatch]);\n\n  const handleNewPage = () => {\n    setCurrentPage(currentPage + 1);\n  };\n\n  const lastPage = cars.length % 12 !== 0;\n\n  return (\n    <>\n      <SearchForm />\n      {isFiltered && filteredCars.length === 0 ? (\n        <EmptyResult />\n      ) : (\n        <CarList cars={isFiltered ? filteredCars : cars} />\n      )}\n      {!lastPage && !isLoading && !isFiltered && (\n        <LoadMoreBtn handleNewPage={handleNewPage}>Load more</LoadMoreBtn>\n      )}\n    </>\n  );\n};\n\nexport default Catalog;\n"],"names":["selectIsFiltered","state","filter","isFiltered","selectFilteredCars","createSelector","selectCars","filterBrand","cars","car","make","toLowerCase","StyledBtn","styled","_templateObject","_taggedTemplateLiteral","_ref","handleNewPage","_jsx","type","onClick","children","Form","BrandWrapper","_templateObject2","MileageWrapper","_templateObject3","Label","_templateObject4","InputMileageText","_templateObject5","inputStyles","InputLeft","_templateObject6","InputRight","_templateObject7","Button","_templateObject8","colorStyles","width","control","provided","_objectSpread","backgroundColor","border","borderRadius","color","fontSize","fontWeight","lineHeight","padding","cursor","marginTop","option","isDisabled","isSelected","transition","singleValue","placeholder","menu","background","boxShadow","overflow","dropdownIndicator","transform","isFocused","indicatorSeparator","menuList","height","brands","makes","map","brand","value","label","dispatch","useDispatch","brandRef","useRef","_jsxs","onSubmit","e","preventDefault","form","target","elements","trim","updateFilter","fetchCars","reset","current","clearValue","Select","name","options","ref","styles","autoComplete","style","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","useSelector","isLoading","selectIsLoading","filteredCars","useEffect","resetFilter","lastPage","length","_Fragment","SearchForm","EmptyResult","CarList","LoadMoreBtn"],"sourceRoot":""}